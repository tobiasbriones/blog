plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'engineer.mathsoftware'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'engineer.mathsoftware.canvasfx'
    mainClass = 'engineer.mathsoftware.canvasfx.CanvasFx'
}

kotlin {
    jvmToolchain(17)
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.web', 'javafx.swing']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project
      .file(
        "${layout.buildDirectory}/distributions/app-${javafx.platform.classifier}.zip"
      )
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        installerOptions += [
          '--resource-dir', 'res',
          '--verbose'
        ]
        imageOptions = ['--win-console']
        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install',
                                 '--win-dir-chooser', '--win-menu']
        }
    }
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}